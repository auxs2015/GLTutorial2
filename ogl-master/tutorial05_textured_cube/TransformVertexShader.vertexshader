#version 330 core

// Input vertex data, different for all executions of this shader.
layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec2 vertexUV;

// Output data ; will be interpolated for each fragment.
out vec2 UV;

// Values that stay constant for the whole mesh.
uniform mat4 MVP;

void main(){

	// Output position of the vertex, in clip space : MVP * position
	gl_Position =  MVP * vec4(vertexPosition_modelspace,1);
	//gl_Position =  MVP * vec4(vec3(vertexPosition_modelspace.x,-vertexPosition_modelspace.y,vertexPosition_modelspace.z),1);//翻转顶点坐标的Y，有一部分面没正确？

	// UV of the vertex. No special space for this one.
	UV = vec2(vertexUV.x,1-vertexUV.y); //翻转贴图的UV 推荐
	//UV = vertexUV;
}

